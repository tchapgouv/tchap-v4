# Run the tests
# Todo : reuse a build from another action, instead of rebuilding for nothing.
# tchap modification : use "./scripts/tchap/install-yarn-linked-repositories.sh" instead of "./scripts/layered.sh"
name: Cypress End to End Tests
on:
    pull_request: {}
    push:
        branches: [develop_tchap, master_tchap]
    #repository_dispatch: # :TCHAP: we don't use this
    #  types: [ element-web-notify ]
env:
    # :TCHAP: not needed for fetchdep.with.version.sh but leaving them otherwise it breaks.
    # These must be set for fetchdep.sh to get the right branch
    REPOSITORY: ${{ github.repository }}
    PR_NUMBER: ${{ github.event.pull_request.number }}
jobs:
    cypress:
        name: Cypress
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2
            - name: Get Node Version
              id: node_version
              run: echo ::set-output name=node_version::$(node -e 'console.log(require("./package.json").engines.node)')
            - name: Yarn cache
              uses: actions/setup-node@v3
              with:
                  cache: "yarn"
                  node-version: ${{ steps.node_version.outputs.node_version }}

            #- name: Install Dependencies # todo is this necessary ? A simpler build without yarn-links would probably work
              #run: "./scripts/tchap/install-yarn-linked-repositories.sh"

            - name: "Copy the config file at the right place"
              run: "cp config.dev.json config.json  && echo 'PWD' && pwd && echo 'LS' && ls . " # todo we could make this configurable.

            - name: "Build the app" #todo : fetch build from an artifact to avoid rebuilding for nothing
              run: "yarn install && yarn build && echo 'PWD' && pwd && echo 'LS' && ls . && echo 'LS ./webapp' && ls ./webapp" # or only yarn build:genfiles && yarn build:bundle" ?

            - name: "Is my built app still there ???"
              run: "echo 'PWD' && pwd && echo 'LS' && ls . && echo 'LS ./webapp' && ls ./webapp"

            # not sure what these two are for, but element uses them
            - uses: browser-actions/setup-chrome@c485fa3bab6be59dce18dbc18ef6ab7cbc8ff5f1
            - run: echo "BROWSER_PATH=$(which chrome)" >> $GITHUB_ENV

            - name: Run Cypress tests
              #uses: cypress-io/github-action@v6.5.0
              uses: cypress-io/github-action@2558ee6af05072a19de2ce92cb68b38616132726
              with:
                  # The built-in Electron runner seems to grind to a halt trying
                  # to run the tests, so use chrome.
                  #browser: chrome
                  browser: ${{ steps.setup-chrome.outputs.chrome-path }}
                  headed: true
                  install: false # disable the default install, we already installed and built.
                  #start: yarn start
                  start: "npx serve -p 8080 -L webapp" # If you have downloaded a build artifact, it will be in webapp dir.
                  # this is not necessary and causes issues where cypress does not find the server. But element-web uses it.
                  #wait-on: "http://[::1]:8000"
                  # wait for 3min, the build is long
                  # wait-on-timeout: 180 not useful with npx serve, it's fast
                  # record: true # todo record to dashboard, see action's doc
                  command: "yarn test:cypress"
                  # dir where the tests are
                  working-directory: cypress
              env:
                  E2E_TEST_USER_EMAIL: ${{ secrets.E2E_TEST_USER_EMAIL }}
                  E2E_TEST_USER_PASSWORD: ${{ secrets.E2E_TEST_USER_PASSWORD }}
                  E2E_TEST_USER_SECURITY_KEY: ${{ secrets.E2E_TEST_USER_SECURITY_KEY }}
                  E2E_TEST_USER_HOMESERVER_URL: "https://matrix.agent1.tchap.incubateur.net"
                  E2E_TEST_USER_HOMESERVER_SHORT: "agent1.tchap.incubateur.net"
                  # todo pass the Dashboard record key as an environment variable
                  # CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # don't remember what this is for, can't hurt
