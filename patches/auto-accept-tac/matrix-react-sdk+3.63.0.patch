diff --git a/node_modules/matrix-react-sdk/src/IdentityAuthClient.tsx b/node_modules/matrix-react-sdk/src/IdentityAuthClient.tsx
index 8d9040b..b2cbb6d 100644
--- a/node_modules/matrix-react-sdk/src/IdentityAuthClient.tsx
+++ b/node_modules/matrix-react-sdk/src/IdentityAuthClient.tsx
@@ -30,6 +30,7 @@ import {
 } from "./utils/IdentityServerUtils";
 import QuestionDialog from "./components/views/dialogs/QuestionDialog";
 import { abbreviateUrl } from "./utils/UrlUtils";
+import TchapUIFeature from "../../../src/util/TchapUIFeature";
 
 export class AbortedIdentityActionError extends Error {}
 
@@ -131,6 +132,18 @@ export default class IdentityAuthClient {
             throw e;
         }
 
+        // :TCHAP: no need confirmation of Terms and Conditions to set a default identity server as we trust our backend servers 
+        if (TchapUIFeature.autoAcceptTermsAndConditions){
+            if (
+                !this.tempClient &&
+                !doesAccountDataHaveIdentityServer() 
+            ) {
+                setToDefaultIdentityServer();
+            }
+            return;
+        }
+        // end :TCHAP:
+
         if (
             !this.tempClient &&
             !doesAccountDataHaveIdentityServer() &&
diff --git a/node_modules/matrix-react-sdk/src/Terms.ts b/node_modules/matrix-react-sdk/src/Terms.ts
index 1904154..51ec628 100644
--- a/node_modules/matrix-react-sdk/src/Terms.ts
+++ b/node_modules/matrix-react-sdk/src/Terms.ts
@@ -21,6 +21,11 @@ import { logger } from "matrix-js-sdk/src/logger";
 import { MatrixClientPeg } from "./MatrixClientPeg";
 import Modal from "./Modal";
 import TermsDialog from "./components/views/dialogs/TermsDialog";
+import {
+    doesAccountDataHaveIdentityServer,
+    setToDefaultIdentityServer,
+} from './utils/IdentityServerUtils';
+import TchapUIFeature from "../../../src/util/TchapUIFeature";
 
 export class TermsNotSignedError extends Error {}
 
@@ -76,6 +81,15 @@ export async function startTermsFlow(
     services: Service[],
     interactionCallback: TermsInteractionCallback = dialogTermsInteractionCallback,
 ) {
+    // :TCHAP: no need to go through Terms flow as we trust our backend servers 
+    if (TchapUIFeature.autoAcceptTermsAndConditions){
+        if (!doesAccountDataHaveIdentityServer()) {
+            setToDefaultIdentityServer();
+        }
+        return;
+    }
+    // end :TCHAP:
+    
     const termsPromises = services.map((s) => MatrixClientPeg.get().getTerms(s.serviceType, s.baseUrl));
 
     /*
