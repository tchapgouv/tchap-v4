diff --git a/node_modules/matrix-react-sdk/src/components/views/dialogs/IncomingSasDialog.tsx b/node_modules/matrix-react-sdk/src/components/views/dialogs/IncomingSasDialog.tsx
index 2b15749..fb71267 100644
--- a/node_modules/matrix-react-sdk/src/components/views/dialogs/IncomingSasDialog.tsx
+++ b/node_modules/matrix-react-sdk/src/components/views/dialogs/IncomingSasDialog.tsx
@@ -176,36 +176,16 @@ export default class IncomingSasDialog extends React.Component<IProps, IState> {
             profile = <Spinner />;
         }
 
-        const userDetailText = [
-            <p key="p1">{ _t(
-                "Verify this user to mark them as trusted. " +
-                "Trusting users gives you extra peace of mind when using " +
-                "end-to-end encrypted messages.",
-            ) }</p>,
-            <p key="p2">{ _t(
-                // NB. Below wording adjusted to singular 'session' until we have
-                // cross-signing
-                "Verifying this user will mark their session as trusted, and " +
-                "also mark your session as trusted to them.",
-            ) }</p>,
-        ];
-
-        const selfDetailText = [
-            <p key="p1">{ _t(
-                "Verify this device to mark it as trusted. " +
-                "Trusting this device gives you and other users extra peace of mind when using " +
-                "end-to-end encrypted messages.",
-            ) }</p>,
-            <p key="p2">{ _t(
-                "Verifying this device will mark it as trusted, and users who have verified with " +
-                "you will trust this device.",
-            ) }</p>,
-        ];
-
         return (
             <div>
-                { profile }
-                { isSelf ? selfDetailText : userDetailText }
+                {/* { profile } */}
+                {/* :TCHAP: simplify modal message */}
+                <p>{ _t(
+                    "One of your devices <b>wants to check your Tchap Keys</b> to unlock your messages.",
+                    {},
+                    { b: sub => <b>{ sub }</b> },
+                ) }</p>
+                {/* end :TCHAP: */}
                 <DialogButtons
                     primaryButton={_t('Continue')}
                     hasCancel={true}
@@ -230,7 +210,7 @@ export default class IncomingSasDialog extends React.Component<IProps, IState> {
         return (
             <div>
                 <Spinner />
-                <p>{ _t("Waiting for partner to confirm...") }</p>
+                <p>{ _t("Please confirm the objects on the other device (loading).")}</p>
             </div>
         );
     }
diff --git a/node_modules/matrix-react-sdk/src/components/views/dialogs/VerificationRequestDialog.tsx b/node_modules/matrix-react-sdk/src/components/views/dialogs/VerificationRequestDialog.tsx
index 8830ee2..768bd87 100644
--- a/node_modules/matrix-react-sdk/src/components/views/dialogs/VerificationRequestDialog.tsx
+++ b/node_modules/matrix-react-sdk/src/components/views/dialogs/VerificationRequestDialog.tsx
@@ -52,8 +52,7 @@ export default class VerificationRequestDialog extends React.Component<IProps, I
         const otherUserId = request && request.otherUserId;
         const member = this.props.member ||
             otherUserId && MatrixClientPeg.get().getUser(otherUserId);
-        const title = request && request.isSelfVerification ?
-            _t("Verify other device") : _t("Verification Request");
+        const title = _t("Incoming Verification Request");
 
         return <BaseDialog
             className="mx_InfoDialog"
diff --git a/node_modules/matrix-react-sdk/src/components/views/right_panel/VerificationPanel.tsx b/node_modules/matrix-react-sdk/src/components/views/right_panel/VerificationPanel.tsx
index 163d6b8..9581296 100644
--- a/node_modules/matrix-react-sdk/src/components/views/right_panel/VerificationPanel.tsx
+++ b/node_modules/matrix-react-sdk/src/components/views/right_panel/VerificationPanel.tsx
@@ -242,10 +242,11 @@ export default class VerificationPanel extends React.PureComponent<IProps, IStat
                 logger.warn("Verified device we don't know about: " + this.props.request.channel.deviceId);
                 description = _t("You've successfully verified your device!");
             } else {
-                description = _t("You've successfully verified %(deviceName)s (%(deviceId)s)!", {
-                    deviceName: device ? device.getDisplayName() : '',
-                    deviceId: this.props.request.channel.deviceId,
-                });
+                description = _t("The sharing of your Tchap Keys has succeeded. Your messages will be unlocked.");
+                // description = _t("You've successfully verified %(deviceName)s (%(deviceId)s)!", {
+                //     deviceName: device ? device.getDisplayName() : '',
+                //     deviceId: this.props.request.channel.deviceId,
+                // });
             }
         } else {
             description = _t("You've successfully verified %(displayName)s!", {
diff --git a/node_modules/matrix-react-sdk/src/components/views/verification/VerificationComplete.tsx b/node_modules/matrix-react-sdk/src/components/views/verification/VerificationComplete.tsx
index 48419d5..971fa42 100644
--- a/node_modules/matrix-react-sdk/src/components/views/verification/VerificationComplete.tsx
+++ b/node_modules/matrix-react-sdk/src/components/views/verification/VerificationComplete.tsx
@@ -26,12 +26,8 @@ interface IProps {
 export default class VerificationComplete extends React.Component<IProps> {
     public render(): React.ReactNode {
         return <div>
-            <h2>{ _t("Verified!") }</h2>
-            <p>{ _t("You've successfully verified this user.") }</p>
-            <p>{ _t(
-                "Secure messages with this user are end-to-end encrypted and not able to be " +
-                "read by third parties.",
-            ) }</p>
+            <h2>{ _t("Incoming Verification Request") }</h2>
+            <p>{ _t("The sharing of your Tchap Keys has succeeded. Your messages will be unlocked.") }</p>
             <DialogButtons onPrimaryButtonClick={this.props.onDone}
                 primaryButton={_t("Got It")}
                 hasCancel={false}
