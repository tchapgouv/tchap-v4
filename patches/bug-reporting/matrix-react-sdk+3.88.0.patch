diff --git a/node_modules/matrix-react-sdk/src/components/views/dialogs/BugReportDialog.tsx b/node_modules/matrix-react-sdk/src/components/views/dialogs/BugReportDialog.tsx
index 5d826f2..5163137 100644
--- a/node_modules/matrix-react-sdk/src/components/views/dialogs/BugReportDialog.tsx
+++ b/node_modules/matrix-react-sdk/src/components/views/dialogs/BugReportDialog.tsx
@@ -32,6 +32,7 @@ import DialogButtons from "../elements/DialogButtons";
 import { sendSentryReport } from "../../../sentry";
 import defaultDispatcher from "../../../dispatcher/dispatcher";
 import { Action } from "../../../dispatcher/actions";
+import { MatrixClientPeg } from '../../../MatrixClientPeg';  // :TCHAP:
 
 interface IProps {
     onFinished: (success: boolean) => void;
@@ -96,12 +97,21 @@ export default class BugReportDialog extends React.Component<IProps, IState> {
     };
 
     private onSubmit = (): void => {
+        /* :TCHAP: do not ask for a github issue
         if ((!this.state.text || !this.state.text.trim()) && (!this.state.issueUrl || !this.state.issueUrl.trim())) {
             this.setState({
                 err: _t("bug_reporting|error_empty"),
             });
             return;
         }
+        */
+        if ((!this.state.text || !this.state.text.trim())) {
+            this.setState({
+                err: _t("Please tell us what went wrong in the \"Notes\" field."),
+            });
+            return;
+        }
+        // end :TCHAP:
 
         const userText =
             (this.state.text.length > 0 ? this.state.text + "\n\n" : "") +
@@ -111,11 +121,24 @@ export default class BugReportDialog extends React.Component<IProps, IState> {
         this.setState({ busy: true, progress: null, err: null });
         this.sendProgressCallback(_t("bug_reporting|preparing_logs"));
 
-        sendBugReport(SdkConfig.get().bug_report_endpoint_url, {
-            userText,
-            sendLogs: true,
-            progressCallback: this.sendProgressCallback,
-            labels: this.props.label ? [this.props.label] : [],
+        // :TCHAP: customise report : add email, prefix with "tchap-web"
+        const client = MatrixClientPeg.get();
+        client.getThreePids().then(result => {
+            const customFields = {};
+            result.threepids.forEach(threepid => {
+                return customFields[threepid.medium] = threepid.address;
+            });
+            return customFields;
+        }).then(customFields => {
+            return sendBugReport(SdkConfig.get().bug_report_endpoint_url, {
+                userText,
+                sendLogs: true,
+                progressCallback: this.sendProgressCallback,
+                labels: this.props.label ? [this.props.label] : [],
+                customApp: 'tchap-web', // :TCHAP:
+                customFields: customFields, // :TCHAP:
+            });
+            // end :TCHAP:
         }).then(
             () => {
                 if (!this.unmounted) {
@@ -150,6 +173,7 @@ export default class BugReportDialog extends React.Component<IProps, IState> {
                 sendLogs: true,
                 progressCallback: this.downloadProgressCallback,
                 labels: this.props.label ? [this.props.label] : [],
+                customApp: 'tchap-web', // :TCHAP: we don't add email here. You know your own email already.
             });
 
             this.setState({
@@ -214,6 +238,53 @@ export default class BugReportDialog extends React.Component<IProps, IState> {
             );
         }
 
+        { /** :TCHAP: replace with our own dialog */}
+        return (
+            <BaseDialog
+            className="mx_BugReportDialog"
+            onFinished={this.onCancel}
+            title={_t('Submit debug logs to Tchap support team')}
+            contentId="mx_Dialog_content"
+        >
+            <div className="mx_Dialog_content" id="mx_Dialog_content">
+                {warning}
+                <p>{_t("bug_reporting|description")}</p>
+                <Field
+                    className="mx_BugReportDialog_field_input"
+                    element="textarea"
+                    label={_t("bug_reporting|textarea_label")}
+                    rows={5}
+                    onChange={this.onTextChange}
+                    value={this.state.text}
+                    placeholder={_t("bug_reporting|additional_context")}
+                />
+                {progress}
+                {error}
+                <DialogButtons
+                    primaryButton={_t("bug_reporting|send_logs")}
+                    onPrimaryButtonClick={this.onSubmit}
+                    focus={true}
+                    hasCancel={false}
+                    disabled={this.state.busy}
+                />
+
+                <div className="mx_BugReportDialog_download">
+                    <p>
+                        { _t("Just want to get your own logs, without sharing them with the Tchap team?") }
+                    </p>
+                    <DialogButtons
+                        primaryButton={_t("bug_reporting|download_logs")}
+                        onPrimaryButtonClick={this.onDownload}
+                        focus={true}
+                        hasCancel={false}
+                        disabled={this.state.downloadBusy}
+                    />
+                    {this.state.downloadProgress && <span>{this.state.downloadProgress} ...</span>}
+                </div>
+            </div>
+        </BaseDialog>
+        );
+        {/*
         return (
             <BaseDialog
                 className="mx_BugReportDialog"
@@ -281,5 +352,6 @@ export default class BugReportDialog extends React.Component<IProps, IState> {
                 />
             </BaseDialog>
         );
+        end :TCHAP: */}
     }
 }
diff --git a/node_modules/matrix-react-sdk/src/components/views/elements/AccessibleButton.tsx b/node_modules/matrix-react-sdk/src/components/views/elements/AccessibleButton.tsx
index e679955..69f9b61 100644
--- a/node_modules/matrix-react-sdk/src/components/views/elements/AccessibleButton.tsx
+++ b/node_modules/matrix-react-sdk/src/components/views/elements/AccessibleButton.tsx
@@ -77,7 +77,7 @@ type IProps<T extends keyof JSX.IntrinsicElements> = DynamicHtmlElementProps<T>
     disabled?: boolean;
     className?: string;
     triggerOnMouseDown?: boolean;
-    onClick: ((e: ButtonEvent) => void | Promise<void>) | null;
+    onClick?: ((e: ButtonEvent) => void | Promise<void>) | null;
 };
 
 export interface IAccessibleButtonProps extends React.InputHTMLAttributes<Element> {
diff --git a/node_modules/matrix-react-sdk/src/rageshake/submit-rageshake.ts b/node_modules/matrix-react-sdk/src/rageshake/submit-rageshake.ts
index 680dabe..f711c47 100644
--- a/node_modules/matrix-react-sdk/src/rageshake/submit-rageshake.ts
+++ b/node_modules/matrix-react-sdk/src/rageshake/submit-rageshake.ts
@@ -335,12 +335,13 @@ export async function submitFeedback(
         version = await PlatformPeg.get()?.getAppVersion();
     } catch (err) {} // PlatformPeg already logs this.
 
+
     const body = new FormData();
     if (label) body.append("label", label);
     body.append("text", comment);
     body.append("can_contact", canContact ? "yes" : "no");
 
-    body.append("app", "element-web");
+    body.append("app", "tchap-web");
     body.append("version", version || "UNKNOWN");
     body.append("platform", PlatformPeg.get()?.getHumanReadableName() ?? "n/a");
     body.append("user_id", MatrixClientPeg.get()?.getUserId() ?? "n/a");
@@ -350,6 +351,13 @@ export async function submitFeedback(
     }
 
     const bugReportEndpointUrl = SdkConfig.get().bug_report_endpoint_url;
+    //:tchap: add email in body
+    const client = MatrixClientPeg.get();
+    const result = await client.getThreePids();//it generates a API calls which is acceptable because feedbacks submit are not so frequent (unfortunately)
+    result.threepids.forEach(threepid => {
+        body.append(threepid.medium, threepid.address);
+    });
+    //:tchap: end
 
     if (bugReportEndpointUrl) {
         await submitReport(bugReportEndpointUrl, body, () => {});
