diff --git a/node_modules/matrix-react-sdk/src/components/views/avatars/DecoratedRoomAvatar.tsx b/node_modules/matrix-react-sdk/src/components/views/avatars/DecoratedRoomAvatar.tsx
index 39997e1..844d59d 100644
--- a/node_modules/matrix-react-sdk/src/components/views/avatars/DecoratedRoomAvatar.tsx
+++ b/node_modules/matrix-react-sdk/src/components/views/avatars/DecoratedRoomAvatar.tsx
@@ -30,6 +30,9 @@ import TextWithTooltip from "../elements/TextWithTooltip";
 import DMRoomMap from "../../../utils/DMRoomMap";
 import { IOOBData } from "../../../stores/ThreepidInviteStore";
 import TooltipTarget from "../elements/TooltipTarget";
+import TchapRoomUtils from "../../../../../../src/tchap/util/TchapRoomUtils";
+import "../../../../../../res/css/views/avatars/_TchapDecoratedRoomAvatar.pcss";
+import { TchapRoomType } from "../../../../../../src/tchap/@types/tchap";
 
 interface IProps {
     room: Room;
@@ -52,6 +55,11 @@ enum Icon {
     // Note: the names here are used in CSS class names
     None = "NONE", // ... except this one
     Globe = "GLOBE",
+    // :TCHAP: add icons for custom room types
+    Forum = "FORUM",
+    Private = "PRIVATE",
+    External = "EXTERNAL",
+    // end :TCHAP:
     PresenceOnline = "ONLINE",
     PresenceAway = "AWAY",
     PresenceOffline = "OFFLINE",
@@ -62,6 +70,14 @@ function tooltipText(variant: Icon): string | undefined {
     switch (variant) {
         case Icon.Globe:
             return _t("room|header|room_is_public");
+        // :TCHAP: add icons for custom room types
+        case Icon.Forum:
+            return _t("This room is a public forum");
+        case Icon.Private:
+            return _t("This room is private");
+        case Icon.External:
+            return _t("This room is private and open to external users");
+        // end :TCHAP:
         case Icon.PresenceOnline:
             return _t("presence|online");
         case Icon.PresenceAway:
@@ -167,7 +183,23 @@ export default class DecoratedRoomAvatar extends React.PureComponent<IProps, ISt
             }
         } else {
             // Track publicity
-            icon = this.isPublicRoom ? Icon.Globe : Icon.None;
+            //icon = this.isPublicRoom ? Icon.Globe : Icon.None;
+            //:tchap: use custom icons for tchap room types
+            const roomType: TchapRoomType = TchapRoomUtils.getTchapRoomType(this.props.room);
+            switch(roomType) {
+                case TchapRoomType.Forum:
+                    icon = Icon.Forum;
+                    break;
+                case TchapRoomType.Private:
+                    icon = Icon.Private;
+                    break;
+                case TchapRoomType.External:
+                    icon = Icon.External;
+                    break;
+                default:
+                    icon = Icon.None;
+            }
+            //end :tchap:
             if (!this.isWatchingTimeline) {
                 this.props.room.on(RoomEvent.Timeline, this.onRoomTimeline);
                 this.isWatchingTimeline = true;
@@ -205,6 +237,10 @@ export default class DecoratedRoomAvatar extends React.PureComponent<IProps, ISt
 
         return (
             <div className={classes}>
+                { /*:TCHAP: extra div to fix positioning.
+                https://github.com/tchapgouv/tchap-web-v4/issues/890
+                Issue should be opened in element-web. */ }
+                <div className="mx_DecoratedRoomAvatar_positionedParent">
                 <RoomAvatar
                     room={this.props.room}
                     size={this.props.size}
@@ -213,6 +249,7 @@ export default class DecoratedRoomAvatar extends React.PureComponent<IProps, ISt
                 />
                 {icon}
                 {badge}
+                </div> { /*:TCHAP: close div */ }
             </div>
         );
     }
diff --git a/node_modules/matrix-react-sdk/src/components/views/right_panel/RoomSummaryCard.tsx b/node_modules/matrix-react-sdk/src/components/views/right_panel/RoomSummaryCard.tsx
index d6dd212..67a3727 100644
--- a/node_modules/matrix-react-sdk/src/components/views/right_panel/RoomSummaryCard.tsx
+++ b/node_modules/matrix-react-sdk/src/components/views/right_panel/RoomSummaryCard.tsx
@@ -76,6 +76,9 @@ import { inviteToRoom } from "../../../utils/room/inviteToRoom";
 import { useAccountData } from "../../../hooks/useAccountData";
 import { useRoomState } from "../../../hooks/useRoomState";
 
+import DecoratedRoomAvatar from "../avatars/DecoratedRoomAvatar"; // :TCHAP:
+
+
 interface IProps {
     room: Room;
     permalinkCreator: RoomPermalinkCreator;
@@ -331,7 +334,11 @@ const RoomSummaryCard: React.FC<IProps> = ({ room, permalinkCreator, onClose, on
     const alias = room.getCanonicalAlias() || room.getAltAliases()[0] || "";
     const header = (
         <header className="mx_RoomSummaryCard_container">
+            {/** :TCHAP: decorate the avatar with the tchap lock icons
             <RoomAvatar room={room} size="80px" viewAvatarOnClick />
+            */}
+            <DecoratedRoomAvatar room={room} size="80px" viewAvatarOnClick />
+            {/* end :TCHAP: */}
             <RoomName room={room}>
                 {(name) => (
                     <Heading
@@ -355,6 +362,7 @@ const RoomSummaryCard: React.FC<IProps> = ({ room, permalinkCreator, onClose, on
                 {alias}
             </Text>
 
+            {/* :TCHAP: remove badges
             <Flex as="section" justify="center" gap="var(--cpd-space-2x)" className="mx_RoomSummaryCard_badges">
                 {!isDirectMessage && roomState.getJoinRule() === JoinRule.Public && (
                     <Badge kind="default">
@@ -384,6 +392,7 @@ const RoomSummaryCard: React.FC<IProps> = ({ room, permalinkCreator, onClose, on
                     </Badge>
                 )}
             </Flex>
+            */}
         </header>
     );
 
