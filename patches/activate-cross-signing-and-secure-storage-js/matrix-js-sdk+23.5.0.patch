diff --git a/node_modules/matrix-js-sdk/src/client.ts b/node_modules/matrix-js-sdk/src/client.ts
index 8f86189..fcea882 100644
--- a/node_modules/matrix-js-sdk/src/client.ts
+++ b/node_modules/matrix-js-sdk/src/client.ts
@@ -207,6 +207,8 @@ import { buildFeatureSupportMap, Feature, ServerSupport } from "./feature";
 import { CryptoBackend } from "./common-crypto/CryptoBackend";
 import { RUST_SDK_STORE_PREFIX } from "./rust-crypto/constants";
 
+import TchapUIFeature from '../../../src/util/TchapUIFeature'; // :TCHAP:
+
 export type Store = IStore;
 
 export type ResetTimelineCallback = (roomId: string) => boolean;
@@ -7178,6 +7180,17 @@ export class MatrixClient extends TypedEventEmitter<EmittedEvents, ClientEventHa
         const response = await this.getVersions();
         if (!response) return false;
         const unstableFeatures = response["unstable_features"];
+
+        console.log('TCHAP server versions', response);
+        // :TCHAP: disable cross signing if needed, by pretending the server doesn't support it.
+        if (!TchapUIFeature.isCrossSigningAndSecureStorageActive()) {
+            unstableFeatures["org.matrix.e2e_cross_signing"] = false;
+        }
+        if (feature === "org.matrix.e2e_cross_signing") {
+            console.info(':TCHAP: doesServerSupportUnstableFeature org.matrix.e2e_cross_signing', unstableFeatures);
+        }
+        // end :TCHAP:
+
         return unstableFeatures && !!unstableFeatures[feature];
     }
 
@@ -7244,7 +7257,10 @@ export class MatrixClient extends TypedEventEmitter<EmittedEvents, ClientEventHa
      * @returns true if server supports the `logout_devices` parameter
      */
     public doesServerSupportLogoutDevices(): Promise<boolean> {
-        return this.isVersionSupported("r0.6.1");
+        // :TCHAP: hard-code to true, our custom backend supports it.
+        // return this.isVersionSupported("r0.6.1");
+        return Promise.resolve(true);
+        // en :TCHAP:
     }
 
     /**
