diff --git a/node_modules/matrix-react-sdk/src/components/structures/MatrixChat.tsx b/node_modules/matrix-react-sdk/src/components/structures/MatrixChat.tsx
index b4d6098..44a2236 100644
--- a/node_modules/matrix-react-sdk/src/components/structures/MatrixChat.tsx
+++ b/node_modules/matrix-react-sdk/src/components/structures/MatrixChat.tsx
@@ -146,6 +146,7 @@ import { checkSessionLockFree, getSessionLock } from "../../utils/SessionLock";
 import { SessionLockStolenView } from "./auth/SessionLockStolenView";
 import { ConfirmSessionLockTheftView } from "./auth/ConfirmSessionLockTheftView";
 import { LoginSplashView } from "./auth/LoginSplashView";
+import TchapUrls from "../../../../../src/tchap/util/TchapUrls"; // :TCHAP:
 
 // legacy export
 export { default as Views } from "../../Views";
@@ -1692,6 +1693,15 @@ export default class MatrixChat extends React.PureComponent<IProps, IState> {
             return;
         }
 
+        //:tchap: add a screen to open user tab security
+        if (screen === TchapUrls.secureBackupFragment) {
+            //open the security tab
+            //there is no anchor to sauvegarde-automatique subection
+            const payload: OpenToTabPayload = { action: Action.ViewUserSettings, initialTabId: UserTab.Security };
+            dis.dispatch(payload);
+        } else
+        //:tchap: end
+
         if (screen === "register") {
             dis.dispatch({
                 action: "start_registration",
diff --git a/node_modules/matrix-react-sdk/src/components/views/settings/CrossSigningPanel.tsx b/node_modules/matrix-react-sdk/src/components/views/settings/CrossSigningPanel.tsx
index 869bb71..aff5fd6 100644
--- a/node_modules/matrix-react-sdk/src/components/views/settings/CrossSigningPanel.tsx
+++ b/node_modules/matrix-react-sdk/src/components/views/settings/CrossSigningPanel.tsx
@@ -227,23 +227,32 @@ export default class CrossSigningPanel extends React.PureComponent<{}, IState> {
             userSigningPrivateKeyCached;
 
         const actions: JSX.Element[] = [];
+        // :TCHAP move Reset button to advanced section
+        const advancedActions: JSX.Element[] = [];
+        // end :TCHAP:
 
         // TODO: determine how better to expose this to users in addition to prompts at login/toast
         if (!keysExistEverywhere && homeserverSupportsCrossSigning) {
-            let buttonCaption = _t("encryption|set_up_toast_title");
+            // :TCHAP: let buttonCaption = _t("encryption|set_up_toast_title");
+            let buttonCaption = _t("Activate on this device");
+            // end :TCHAP:
             if (crossSigningPrivateKeysInStorage) {
                 buttonCaption = _t("encryption|verify_toast_title");
             }
-            actions.push(
-                <AccessibleButton key="setup" kind="primary_outline" onClick={this.onBootstrapClick}>
+            // :TCHAP: actions.push(
+            advancedActions.push(
+            // end :TCHAP:
+                <AccessibleButton key="setup" kind="primary" onClick={this.onBootstrapClick}>
                     {buttonCaption}
                 </AccessibleButton>,
             );
         }
 
         if (keysExistAnywhere) {
-            actions.push(
-                <AccessibleButton key="reset" kind="danger_outline" onClick={this.onResetCrossSigningClick}>
+            // :TCHAP actions.push(
+            advancedActions.push(
+            // end :TCHAP:
+                <AccessibleButton key="reset" kind="danger" onClick={this.onResetCrossSigningClick}>
                     {_t("action|reset")}
                 </AccessibleButton>,
             );
@@ -254,6 +263,13 @@ export default class CrossSigningPanel extends React.PureComponent<{}, IState> {
             actionRow = <div className="mx_CrossSigningPanel_buttonRow">{actions}</div>;
         }
 
+        // :TCHAP add
+        let advancedActionRow;
+        if (advancedActions.length) {
+            advancedActionRow = <div className="mx_CrossSigningPanel_buttonRow">{advancedActions}</div>;
+        }
+        // end :TCHAP:
+
         return (
             <>
                 {summarisedStatus}
@@ -311,6 +327,7 @@ export default class CrossSigningPanel extends React.PureComponent<{}, IState> {
                             </tr>
                         </tbody>
                     </table>
+                    {advancedActionRow}
                 </details>
                 {errorSection}
                 {actionRow}
diff --git a/node_modules/matrix-react-sdk/src/components/views/settings/SecureBackupPanel.tsx b/node_modules/matrix-react-sdk/src/components/views/settings/SecureBackupPanel.tsx
index 520379c..790b85b 100644
--- a/node_modules/matrix-react-sdk/src/components/views/settings/SecureBackupPanel.tsx
+++ b/node_modules/matrix-react-sdk/src/components/views/settings/SecureBackupPanel.tsx
@@ -266,12 +266,23 @@ export default class SecureBackupPanel extends React.PureComponent<{}, IState> {
             } else {
                 statusDescription = (
                     <>
+                        {/* TCHAP add Tchap text */}
+                        <SettingsSubsectionText>
+                                {_t(
+                                    "settings|security|key_backup_inactive_warning",
+                                    {},
+                                    { b: (sub) => <b>{sub}</b> },
+                                )}
+                        </SettingsSubsectionText>
+                        {/* end TCHAP */}
+                        {/* :TCHAP remove element text
                         <SettingsSubsectionText>
                             {_t("settings|security|key_backup_inactive", {}, { b: (sub) => <b>{sub}</b> })}
                         </SettingsSubsectionText>
                         <SettingsSubsectionText>
                             {_t("settings|security|key_backup_connect_prompt")}
                         </SettingsSubsectionText>
+                        end :TCHAP: */}
                     </>
                 );
                 restoreButtonCaption = _t("settings|security|key_backup_connect");
@@ -333,6 +344,7 @@ export default class SecureBackupPanel extends React.PureComponent<{}, IState> {
                 </AccessibleButton>,
             );
 
+            /* :TCHAP: hide
             if (!isSecureBackupRequired(MatrixClientPeg.safeGet())) {
                 actions.push(
                     <AccessibleButton key="delete" kind="danger_outline" onClick={this.deleteBackup}>
@@ -340,13 +352,16 @@ export default class SecureBackupPanel extends React.PureComponent<{}, IState> {
                     </AccessibleButton>,
                 );
             }
+            end :TCHAP: */
         } else {
             statusDescription = (
                 <>
                     <SettingsSubsectionText>
                         {_t("settings|security|key_backup_inactive_warning", {}, { b: (sub) => <b>{sub}</b> })}
                     </SettingsSubsectionText>
+                    {/* :TCHAP: remove
                     <SettingsSubsectionText>{_t("encryption|setup_secure_backup|explainer")}</SettingsSubsectionText>
+                    end :TCHAP: */}
                 </>
             );
             actions.push(
@@ -359,7 +374,9 @@ export default class SecureBackupPanel extends React.PureComponent<{}, IState> {
         if (secretStorageKeyInAccount) {
             actions.push(
                 <AccessibleButton key="reset" kind="danger_outline" onClick={this.resetSecretStorage}>
-                    {_t("action|reset")}
+                    {/* :TCHAP: _t("action|reset") */}
+                    {_t("Generate a new code")}
+                    {/* end :TCHAP: */}
                 </AccessibleButton>,
             );
         }
