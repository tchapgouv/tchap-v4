diff --git a/node_modules/matrix-react-sdk/res/css/views/directory/_NetworkDropdown.pcss b/node_modules/matrix-react-sdk/res/css/views/directory/_NetworkDropdown.pcss
index 8dbd7f0..0b9172c 100644
--- a/node_modules/matrix-react-sdk/res/css/views/directory/_NetworkDropdown.pcss
+++ b/node_modules/matrix-react-sdk/res/css/views/directory/_NetworkDropdown.pcss
@@ -17,6 +17,7 @@ limitations under the License.
 .mx_NetworkDropdown_wrapper .mx_ContextualMenu {
     .mx_GenericDropdownMenu_Option {
         &.mx_GenericDropdownMenu_Option--header {
+            display:none;
             padding-top: $spacing-12;
             padding-bottom: $spacing-4;
             min-width: 160px;
@@ -45,12 +46,14 @@ limitations under the License.
     }
 
     .mx_GenericDropdownMenu_divider {
+        display:none;
         margin-top: $spacing-4;
         margin-bottom: $spacing-4;
     }
 }
 
 .mx_NetworkDropdown_addServer {
+    display:none;
     font-weight: normal;
     font-size: $font-15px;
 }
diff --git a/node_modules/matrix-react-sdk/src/components/views/directory/NetworkDropdown.tsx b/node_modules/matrix-react-sdk/src/components/views/directory/NetworkDropdown.tsx
index e9885f4..c708933 100644
--- a/node_modules/matrix-react-sdk/src/components/views/directory/NetworkDropdown.tsx
+++ b/node_modules/matrix-react-sdk/src/components/views/directory/NetworkDropdown.tsx
@@ -30,6 +30,7 @@ import { GenericDropdownMenu, GenericDropdownMenuItem } from "../../structures/G
 import TextInputDialog from "../dialogs/TextInputDialog";
 import AccessibleButton from "../elements/AccessibleButton";
 import withValidation from "../elements/Validation";
+import TchapUtils from "../../../../../../src/tchap/util/TchapUtils";
 
 const SETTING_NAME = "room_directory_servers";
 
@@ -156,7 +157,8 @@ export const NetworkDropdown: React.FC<IProps> = ({ protocols, config, setConfig
         options: [
             {
                 key: { roomServer, instanceId: undefined },
-                label: _t("common|matrix"),
+                // :TCHAP: remove > label: _t("common|matrix"),
+                label: TchapUtils.toFriendlyServerName(roomServer)
             },
             ...(roomServer === homeServer && protocols
                 ? Object.values(protocols)
@@ -237,7 +239,11 @@ export const NetworkDropdown: React.FC<IProps> = ({ protocols, config, setConfig
             selectedLabel={(option) =>
                 option?.key
                     ? _t("spotlight|public_rooms|network_dropdown_selected_label_instance", {
-                          server: option.key.roomServer,
+                        /* :TCHAP:
+                        server: option.key.roomServer,
+                        */
+                        server: TchapUtils.toFriendlyServerName(option.key.roomServer),
+                        // end :TCHAP:
                           instance: option.key.instanceId ? option.label : "Matrix",
                       })
                     : _t("spotlight|public_rooms|network_dropdown_selected_label")
